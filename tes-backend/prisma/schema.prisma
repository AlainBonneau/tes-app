generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

// Model User, Post and Comment for the forum

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  username String @unique
  birthdate DateTime?
  createdAt DateTime @default(now())
  firstName String?
  lastName  String?
  imageUrl  String?
  description String?
  password String   
  role     String   @default("user") 
  posts    Post[]
  comments Comment[]
}

model ForumCategory {
  id      Int    @id @default(autoincrement())
  name    String
  desc    String
  icon    String?
  slug    String  @unique
  posts   Post[]
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  comments  Comment[]
  category  ForumCategory @relation(fields: [categoryId], references: [id])
  categoryId Int

  pinned    Boolean  @default(false)
  locked    Boolean  @default(false)
  views     Int      @default(0)
  lastEdit  DateTime?
  slug      String   @unique
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  parent    Comment? @relation("CommentParent", fields: [parentId], references: [id])
  parentId  Int?
  children  Comment[] @relation("CommentParent")
}

// Model region, character, and creature for the bestiary

model Region {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  imageUrl    String?
  x           Int?
  y           Int?
  creatures   Creature[]
  characters  Character[]
}

model Race {
  id          Int         @id @default(autoincrement())
  name        String
  origine     String
  description String
  characters  Character[]
}

model Character {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  imageUrl    String?
  region      Region    @relation(fields: [regionId], references: [id])
  regionId    Int
  race        Race      @relation(fields: [raceId], references: [id])
  raceId      Int
}

model Creature {
  id          Int       @id @default(autoincrement())
  name        String
  type        String
  description String
  imageUrl    String?
  region      Region?   @relation(fields: [regionId], references: [id]) 
  regionId    Int?                                      
}

model Book {
  id        Int     @id @default(autoincrement())
  title     String
  author    String?
  summary   String?
  imageUrl  String?
  content   String
}
